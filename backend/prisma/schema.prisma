// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email     String   @unique @db.VarChar(255)
  password  String   @db.VarChar(255)
  name      String   @db.VarChar(255)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Relations
  tours         Tour[]         @relation("TourCreator")
  reservations  Reservation[]

  @@map("users")
}

model Tour {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title       String   @db.VarChar(255)
  description String
  price       Decimal  @db.Numeric(10,2)
  location    String   @db.VarChar(255)
  imageUrl    String?  @map("image_url")
  duration    Int      // in hours
  maxCapacity Int      @map("max_capacity")
  creatorId   String   @db.Uuid @map("creator_id")
  createdAt   DateTime @default(now()) @db.Timestamptz @map("created_at")
  updatedAt   DateTime @updatedAt @db.Timestamptz @map("updated_at")

  // Relations
  creatorId   String  @map("creator_id")
  creator     User    @relation("TourCreator", fields: [creatorId], references: [id])
  reservations Reservation[]

  @@map("tours")
}

model Reservation {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  tourId    String   @db.Uuid @map("tour_id")
  userId    String   @db.Uuid @map("user_id")
  date      DateTime @db.Date
  guests    Int
  totalPrice Decimal  @db.Numeric(10,2)
  status    ReservationStatus @default(PENDING)
  createdAt DateTime @default(now()) @db.Timestamptz @map("created_at")
  updatedAt DateTime @updatedAt @db.Timestamptz @map("updated_at")

  // Relations
  tour      Tour     @relation(fields: [tourId], references: [id])
  user      User     @relation(fields: [userId], references: [id])

  @@map("reservations")
}

enum ReservationStatus {
  PENDING
  CONFIRMED
  CANCELLED
  COMPLETED
}
